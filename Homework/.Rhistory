x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo",
| "bar")]
vect[c("foo","bar")]
#Q2
a<-rnorm(2000,mean=0,sd=1)
#Q2
a<-rnorm(2000,mean=0,sd=1)
fig1<-density(a)
plot(fig1)
1st<-quantile(a)
st1<-quantile(a)
plot(fig1)
st1<-quantile(a,1/4)
st2<-quantile(a,1/2)
st3<-quantile(a,3/4)
sd<-sd(a)
ans<-c(st1,st2,st3)/sd
ans
#Q3
#(b)
rand_data <- rnorm(800, mean=20, sd = 5)
#Q3
#(b)
rand_data <- rnorm(800, mean=20, sd = 5)
st1<-quantile(rand_data,1/4)
st2<-quantile(rand_data,1/2)
st3<-quantile(rand_data,3/4)
h=2×IQR×n−1/3
?sqrt
h=2*IQR×sqrt(n,-1/3)
IQR=st1-st3
IQR<-IQR(rand_data)
h=2*IQR*sqrt(n,-1/3)
h=2*IQR*sqrt(800,-1/3)
h=2*IQR*(800^(-1/3))
h
n<-(max(rand_data)-min(rand_data))/h
n
#Q3
#(b)
rand_data <- rnorm(800, mean=20, sd = 5)
#Q3
#(b)
rand_data <- rnorm(800, mean=20, sd = 5)
#(b)-1
n<-log(800)+1
h = (max(rand_data) - min(rand_data)) / n
#(b)-3
IQR<-IQR(rand_data)
c(n,h)
#(b)-3
IQR<-IQR(rand_data)
h=2*IQR*(800^(-1/3))
h
n<-(max(rand_data)-min(rand_data))/h
n
#(b)-2
h<-3.49*sd(rand_data)/(n^(-1/3))
h
#(b)-2
h<-3.49*sd(rand_data)/(800^(-1/3))
h
#(b)-2
h<-3.49*sd(rand_data)/(800^(1/3))
h
n<-ceiling((max(rand_data) - min(rand_data))/h)
n
#Q3
#(b)
rand_data <- rnorm(800, mean=20, sd = 5)
#(b)-1
n1<-log(800)+1#num of bins
h1<-(max(rand_data) - min(rand_data)) / n
#(b)-2
h2<-3.49*sd(rand_data)/(800^(1/3))#width of bins
n2<-ceiling((max(rand_data) - min(rand_data))/h)
#(b)-3
IQR<-IQR(rand_data)
h3=2*IQR*(800^(-1/3))#width of bins
n3<-ceiling((max(rand_data) - min(rand_data))/h)
c(n1,h1)
c(n2,h2)
c(n3,h3)
#(b)-1
n1<-ceiling(log(800)+1)#num of bins
h1<-(max(rand_data) - min(rand_data)) / n
c(n1,h1)
c(n2,h2)
c(n3,h3)
#(c)
out_data <- c(rand_data, runif(10, min=40, max=60))
#(b)-1
n1<-ceiling(log(800)+1)#num of bins
h1<-(max(out_data) - min(out_data)) / n
#(b)-2
h2<-3.49*sd(out_data)/(800^(1/3))#width of bins
n2<-ceiling((max(out_data) - min(out_data))/h)
#(b)-3
IQR<-IQR(out_data)
h3=2*IQR*(800^(-1/3))#width of bins
n3<-ceiling((max(out_data) - min(out_data))/h)
c(n1,h1)
c(n2,h2)
c(n3,h3)
#Q3
#(b)
rand_data <- rnorm(800, mean=20, sd = 5)
#(b)-1
n1<-ceiling(log(800)+1)#num of bins
h1<-(max(rand_data) - min(rand_data)) / n
#(b)-2
h2<-3.49*sd(rand_data)/(800^(1/3))#width of bins
n2<-ceiling((max(rand_data) - min(rand_data))/h)
#(b)-3
IQR<-IQR(rand_data)
h3=2*IQR*(800^(-1/3))#width of bins
n3<-ceiling((max(rand_data) - min(rand_data))/h)
c(n1,h1)
c(n2,h2)
c(n3,h3)
#(c)
out_data <- c(rand_data, runif(10, min=40, max=60))
#(b)-1
out_n1<-ceiling(log(800)+1)#num of bins
out_h1<-(max(out_data) - min(out_data)) / n
#(b)-2
out_h2<-3.49*sd(out_data)/(800^(1/3))#width of bins
out_n2<-ceiling((max(out_data) - min(out_data))/h)
#(b)-3
IQR<-IQR(out_data)
out_h3=2*IQR*(800^(-1/3))#width of bins
out_n3<-ceiling((max(out_data) - min(out_data))/h)
c(out_n1,out_h1)
c(out_n2,out_h2)
c(out_n3,out_h3)
diff<-c(out_h1-h1,out_h2-h2,out_h3-h3)
diff
#(c)
c<-rnorm(2000,mean=35,sd=3.5)
#Q2
#(a)
a<-rnorm(2000,mean=0,sd=1)
fig1<-density(a)
plot(fig1)
#(b)
st1<-quantile(a,1/4)
st2<-quantile(a,1/2)
st3<-quantile(a,3/4)
sd<-sd(a)
ans<-c(st1,st2,st3)/sd
ans
#(c)
c<-rnorm(2000,mean=35,sd=3.5)
st1c<-quantile(a,1/4)
st2c<-quantile(a,1/2)
st3c<-quantile(a,3/4)
sdc<-sd(c)
ansc<-c(st1c,st2c,st3c)/sdc
ans
ansc
#Q3
#(b)
rand_data <- rnorm(800, mean=20, sd = 5)
#Q1
# Three normally distributed data sets
d1 <- rnorm(n=1000, mean=10, sd=5)
d2 <- rnorm(n=200, mean=40, sd=5)
d3 <- rnorm(n=50, mean=60, sd=5)
# Combining them into a composite dataset
d123 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(d123), col="blue", lwd=2,
main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
d2 <- rnorm(n=200, mean=30, sd=5)
# Combining them into a composite dataset
d123 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(d123), col="blue", lwd=2,
main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
#Q1
# Three normally distributed data sets
d1 <- rnorm(n=1000, mean=10, sd=10)
d2 <- rnorm(n=200, mean=30, sd=10)
d3 <- rnorm(n=50, mean=60, sd=10)
# Combining them into a composite dataset
d123 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(d123), col="blue", lwd=2,
main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
#Q1
# Three normally distributed data sets
d1 <- rnorm(n=1000, mean=60, sd=10)
d2 <- rnorm(n=200, mean=30, sd=10)
d3 <- rnorm(n=100, mean=100, sd=10)
# Combining them into a composite dataset
d123 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(d123), col="blue", lwd=2,
main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
#Q1
# Three normally distributed data sets
d1 <- rnorm(n=400, mean=60, sd=10)
d2 <- rnorm(n=200, mean=30, sd=10)
d3 <- rnorm(n=100, mean=10, sd=10)
# Combining them into a composite dataset
d123 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(d123), col="blue", lwd=2,
main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
#Q1
# Three normally distributed data sets
d1 <- rnorm(n=400, mean=60, sd=8)
d2 <- rnorm(n=200, mean=30, sd=8)
d3 <- rnorm(n=100, mean=10, sd=8)
# Combining them into a composite dataset
d123 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(d123), col="blue", lwd=2,
main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
#Q1
#(a)
# Three normally distributed data sets
d1 <- rnorm(n=400, mean=60, sd=8)
d2 <- rnorm(n=200, mean=30, sd=8)
d3 <- rnorm(n=200, mean=10, sd=8)
# Combining them into a composite dataset
D2 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(D2), col="blue", lwd=2, main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(D2))
abline(v=median(D2), lty="dashed")
#Q1
#(a)
# Three normally distributed data sets
d1 <- rnorm(n=400, mean=60, sd=8)
d2 <- rnorm(n=200, mean=40, sd=8)
d3 <- rnorm(n=200, mean=10, sd=8)
# Combining them into a composite dataset
D2 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(D2), col="blue", lwd=2, main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(D2))
abline(v=median(D2), lty="dashed")
#(b)
D3<-rnorm(800,30,8)
#Q1
#(a)
# Three normally distributed data sets
d1 <- rnorm(n=400, mean=60, sd=8)
d2 <- rnorm(n=200, mean=40, sd=8)
d3 <- rnorm(n=200, mean=10, sd=8)
# Combining them into a composite dataset
D2 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(D2), col="blue", lwd=2, main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(D2))
abline(v=median(D2), lty="dashed")
#(b)
D3<-rnorm(800,30,8)
plot(density(D3), col="blue", lwd=2, main = "Distribution 1")
abline(v=mean(D3))
abline(v=median(D3), lty="dashed")
#Q1
#(a)
# Three normally distributed data sets
d1 <- rnorm(n=400, mean=60, sd=8)
d2 <- rnorm(n=200, mean=40, sd=8)
d3 <- rnorm(n=200, mean=10, sd=8)
# Combining them into a composite dataset
D2 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(D2), col="blue", lwd=2, main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(D2))
abline(v=median(D2), lty="dashed")
#Q1
#(a)
# Three normally distributed data sets
d1 <- rnorm(n=400, mean=60, sd=8)
d2 <- rnorm(n=200, mean=40, sd=8)
d3 <- rnorm(n=200, mean=10, sd=8)
# Combining them into a composite dataset
D2 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(D2), col="blue", lwd=2, main = "Distribution 1")
#Q1
#(a)
# Three normally distributed data sets
d1 <- rnorm(n=400, mean=60, sd=8)
d2 <- rnorm(n=200, mean=40, sd=8)
d3 <- rnorm(n=200, mean=10, sd=8)
# Combining them into a composite dataset
D2 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(D2), col="blue", lwd=2, main = "Distribution 2")
# Add vertical lines showing mean and median
abline(v=mean(D2))
abline(v=median(D2), lty="dashed")
#(b)
D3<-rnorm(800,30,8)
plot(density(D3), col="blue", lwd=2, main = "Distribution 3")
abline(v=mean(D3))
abline(v=median(D3), lty="dashed")
#Q1
# Three normally distributed data sets
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
# Combining them into a composite dataset
d123 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(d123), col="blue", lwd=2,
main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
#(a)
# Three normally distributed data sets
d1 <- rnorm(n=600, mean=60, sd=8)
d2 <- rnorm(n=150, mean=40, sd=8)
d3 <- rnorm(n=50, mean=10, sd=8)
# Combining them into a composite dataset
D2 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(D2), col="blue", lwd=2, main = "Distribution 2")
# Add vertical lines showing mean and median
abline(v=mean(D2))
abline(v=median(D2), lty="dashed")
#(b)
D3<-rnorm(800,30,8)
plot(density(D3), col="blue", lwd=2, main = "Distribution 3")
abline(v=mean(D3))
#(a)
# Three normally distributed data sets
d1 <- rnorm(n=600, mean=60, sd=8)
d2 <- rnorm(n=150, mean=40, sd=8)
d3 <- rnorm(n=50, mean=10, sd=8)
# Combining them into a composite dataset
D2 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(D2), col="blue", lwd=2, main = "Distribution 2")
# Add vertical lines showing mean and median
abline(v=mean(D2))
abline(v=median(D2), lty="dashed")
#Q2
#(a)
a<-rnorm(2000,mean=0,sd=1)
fig1<-density(a)
plot(fig1)
abline(v=mean(a))
abline(v=mean(a)+median(a), lty="dashed")
#Q2
#(a)
a<-rnorm(2000,mean=0,sd=1)
fig1<-density(a)
plot(fig1)
abline(v=mean(a))
abline(v=mean(a)+median(a), lty="dashed")
abline(v=mean(a)+sd(a), lty="dashed")
#Q2
#(a)
a<-rnorm(2000,mean=0,sd=1)
fig1<-density(a)
plot(fig1)
abline(v=mean(a))
abline(v=mean(a)+sd(a), lty="dashed")
abline(v=mean(a)+2sd(a), lty="dashed")
abline(v=mean(a)+3sd(a), lty="dashed")
abline(v=mean(a)-sd(a), lty="dashed")
abline(v=mean(a)-2sd(a), lty="dashed")
#Q2
#(a)
a<-rnorm(2000,mean=0,sd=1)
fig1<-density(a)
plot(fig1)
abline(v=mean(a))
abline(v=mean(a)+sd(a), lty="dashed")
abline(v=mean(a)+2*sd(a), lty="dashed")
abline(v=mean(a)+3*sd(a), lty="dashed")
abline(v=mean(a)-sd(a), lty="dashed")
abline(v=mean(a)-2*sd(a), lty="dashed")
abline(v=mean(a)-3*sd(a), lty="dashed")
#(d)
st1d<-quantile(d123,1/4)
st3d<-quantile(d123,3/4)
sdd<-sd(d123)
c(st1,st3)/sdd
#Q1
# Three normally distributed data sets
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
# Combining them into a composite dataset
d123 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(d123), col="blue", lwd=2,
main = "Distribution 1")
# Add vertical lines showing mean and median
abline(v=mean(d123))
abline(v=median(d123), lty="dashed")
#(a)
# Three normally distributed data sets
d1 <- rnorm(n=600, mean=60, sd=8)
d2 <- rnorm(n=150, mean=40, sd=8)
d3 <- rnorm(n=50, mean=10, sd=8)
# Combining them into a composite dataset
D2 <- c(d1, d2, d3)
# Let’s plot the density function of d123
plot(density(D2), col="blue", lwd=2, main = "Distribution 2")
# Add vertical lines showing mean and median
abline(v=mean(D2))
abline(v=median(D2), lty="dashed")
#(b)
D3<-rnorm(800,30,8)
plot(density(D3), col="blue", lwd=2, main = "Distribution 3")
abline(v=mean(D3))
abline(v=median(D3), lty="dashed")
#Q2
#(a)
a<-rnorm(2000,mean=0,sd=1)
fig1<-density(a)
plot(fig1)
abline(v=mean(a))
abline(v=mean(a)+sd(a), lty="dashed")
abline(v=mean(a)+2*sd(a), lty="dashed")
abline(v=mean(a)+3*sd(a), lty="dashed")
abline(v=mean(a)-sd(a), lty="dashed")
abline(v=mean(a)-2*sd(a), lty="dashed")
abline(v=mean(a)-3*sd(a), lty="dashed")
#(b)
st1<-quantile(a,1/4)
st2<-quantile(a,1/2)
st3<-quantile(a,3/4)
sd<-sd(a)
ans<-c(st1,st2,st3)/sd
ans
#(c)
c<-rnorm(2000,mean=35,sd=3.5)
st1c<-quantile(a,1/4)
st3c<-quantile(a,3/4)
sdc<-sd(c)
ansc<-c(st1c,st3c)/sdc
ans
ansc
#(d)
st1d<-quantile(d123,1/4)
st3d<-quantile(d123,3/4)
sdd<-sd(d123)
c(st1,st3)/sdd
#Q3
#(b)
rand_data <- rnorm(800, mean=20, sd = 5)
#(b)-1
n1<-ceiling(log(800)+1)#num of bins
h1<-(max(rand_data) - min(rand_data)) / n
#(b)-2
h2<-3.49*sd(rand_data)/(800^(1/3))#width of bins
n2<-ceiling((max(rand_data) - min(rand_data))/h)
#(b)-3
IQR<-IQR(rand_data)
h3=2*IQR*(800^(-1/3))#width of bins
n3<-ceiling((max(rand_data) - min(rand_data))/h)
c(n1,h1)
c(n2,h2)
c(n3,h3)
#(c)
out_data <- c(rand_data, runif(10, min=40, max=60))
#(c)-1
out_n1<-ceiling(log(800)+1)#num of bins
out_h1<-(max(out_data) - min(out_data)) / n
#(c)-2
out_h2<-3.49*sd(out_data)/(800^(1/3))#width of bins
out_n2<-ceiling((max(out_data) - min(out_data))/h)
#(c)-3
IQR<-IQR(out_data)
out_h3=2*IQR*(800^(-1/3))#width of bins
out_n3<-ceiling((max(out_data) - min(out_data))/h)
c(out_n1,out_h1)
c(out_n2,out_h2)
c(out_n3,out_h3)
diff<-c(out_h1-h1,out_h2-h2,out_h3-h3)
diff
